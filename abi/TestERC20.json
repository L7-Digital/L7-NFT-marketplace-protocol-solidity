{
  "contractName": "TestERC20",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/test/TestERC20.sol\":\"TestERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c\",\"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr\"]},\"project:/contracts/lib/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"project:/contracts/lib/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"project:/contracts/lib/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"project:/contracts/test/TestERC20.sol\":{\"keccak256\":\"0xf333bc636d72bb2f002c29ac8ab4be17e51a8a72097e0ee678a52c4b5265711c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51db1565fc8386adec7bd54ca310a2e1e5623a6e8f6b211db9ea4fec997a5209\",\"dweb:/ipfs/QmQCy4fF5aSd2aqtHoXumgaruGQkKgQi4ky3nVVqwo1Qcp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051806040016040528060048152602001631d195cdd60e21b815250604051806040016040528060038152602001621514d560ea1b815250816003908051906020019061006092919061007c565b50805161007490600490602084019061007c565b505050610150565b82805461008890610115565b90600052602060002090601f0160209004810192826100aa57600085556100f0565b82601f106100c357805160ff19168380011785556100f0565b828001600101855582156100f0579182015b828111156100f05782518255916020019190600101906100d5565b506100fc929150610100565b5090565b5b808211156100fc5760008155600101610101565b600181811c9082168061012957607f821691505b6020821081141561014a57634e487b7160e01b600052602260045260246000fd5b50919050565b6109f38061015f6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015457806395d89b411461017d578063a457c2d714610185578063a9059cbb14610198578063dd62ed3e146101ab57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e4565b6040516100ce91906108ea565b60405180910390f35b6100ea6100e53660046108c1565b610276565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610886565b61028c565b604051601281526020016100ce565b6100ea61013c3660046108c1565b610342565b6100ea61014f3660046108c1565b610379565b6100fe610162366004610833565b6001600160a01b031660009081526020819052604090205490565b6100c1610385565b6100ea6101933660046108c1565b610394565b6100ea6101a63660046108c1565b61042f565b6100fe6101b9366004610854565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f39061096c565b80601f016020809104026020016040519081016040528092919081815260200182805461021f9061096c565b801561026c5780601f106102415761010080835404028352916020019161026c565b820191906000526020600020905b81548152906001019060200180831161024f57829003601f168201915b5050505050905090565b600061028333848461043c565b50600192915050565b6000610299848484610560565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103235760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61033785336103328685610955565b61043c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161028391859061033290869061093d565b60006102838383610738565b6060600480546101f39061096c565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104165760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161031a565b61042533856103328685610955565b5060019392505050565b6000610283338484610560565b6001600160a01b03831661049e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161031a565b6001600160a01b0382166104ff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161031a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161031a565b6001600160a01b0382166106265760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161031a565b6001600160a01b0383166000908152602081905260409020548181101561069e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161031a565b6106a88282610955565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106de90849061093d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072a91815260200190565b60405180910390a350505050565b6001600160a01b03821661078e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161031a565b80600260008282546107a0919061093d565b90915550506001600160a01b038216600090815260208190526040812080548392906107cd90849061093d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461082e57600080fd5b919050565b600060208284031215610844578081fd5b61084d82610817565b9392505050565b60008060408385031215610866578081fd5b61086f83610817565b915061087d60208401610817565b90509250929050565b60008060006060848603121561089a578081fd5b6108a384610817565b92506108b160208501610817565b9150604084013590509250925092565b600080604083850312156108d3578182fd5b6108dc83610817565b946020939093013593505050565b6000602080835283518082850152825b81811015610916578581018301518582016040015282016108fa565b818111156109275783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610950576109506109a7565b500190565b600082821015610967576109676109a7565b500390565b600181811c9082168061098057607f821691505b602082108114156109a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122045803a6c1c68a4a62a8c6873b3201d146575e56712b6fb1fd7fada5ed26cb39e64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461014157806370a082311461015457806395d89b411461017d578063a457c2d714610185578063a9059cbb14610198578063dd62ed3e146101ab57600080fd5b806306fdde03146100b9578063095ea7b3146100d757806318160ddd146100fa57806323b872dd1461010c578063313ce5671461011f578063395093511461012e575b600080fd5b6100c16101e4565b6040516100ce91906108ea565b60405180910390f35b6100ea6100e53660046108c1565b610276565b60405190151581526020016100ce565b6002545b6040519081526020016100ce565b6100ea61011a366004610886565b61028c565b604051601281526020016100ce565b6100ea61013c3660046108c1565b610342565b6100ea61014f3660046108c1565b610379565b6100fe610162366004610833565b6001600160a01b031660009081526020819052604090205490565b6100c1610385565b6100ea6101933660046108c1565b610394565b6100ea6101a63660046108c1565b61042f565b6100fe6101b9366004610854565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f39061096c565b80601f016020809104026020016040519081016040528092919081815260200182805461021f9061096c565b801561026c5780601f106102415761010080835404028352916020019161026c565b820191906000526020600020905b81548152906001019060200180831161024f57829003601f168201915b5050505050905090565b600061028333848461043c565b50600192915050565b6000610299848484610560565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103235760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61033785336103328685610955565b61043c565b506001949350505050565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161028391859061033290869061093d565b60006102838383610738565b6060600480546101f39061096c565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104165760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161031a565b61042533856103328685610955565b5060019392505050565b6000610283338484610560565b6001600160a01b03831661049e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161031a565b6001600160a01b0382166104ff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161031a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166105c45760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161031a565b6001600160a01b0382166106265760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161031a565b6001600160a01b0383166000908152602081905260409020548181101561069e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161031a565b6106a88282610955565b6001600160a01b0380861660009081526020819052604080822093909355908516815290812080548492906106de90849061093d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161072a91815260200190565b60405180910390a350505050565b6001600160a01b03821661078e5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161031a565b80600260008282546107a0919061093d565b90915550506001600160a01b038216600090815260208190526040812080548392906107cd90849061093d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b038116811461082e57600080fd5b919050565b600060208284031215610844578081fd5b61084d82610817565b9392505050565b60008060408385031215610866578081fd5b61086f83610817565b915061087d60208401610817565b90509250929050565b60008060006060848603121561089a578081fd5b6108a384610817565b92506108b160208501610817565b9150604084013590509250925092565b600080604083850312156108d3578182fd5b6108dc83610817565b946020939093013593505050565b6000602080835283518082850152825b81811015610916578581018301518582016040015282016108fa565b818111156109275783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610950576109506109a7565b500190565b600082821015610967576109676109a7565b500390565b600181811c9082168061098057607f821691505b602082108114156109a157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122045803a6c1c68a4a62a8c6873b3201d146575e56712b6fb1fd7fada5ed26cb39e64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:396:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:325:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "93:1:67",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "96:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "89:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "79:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "110:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "140:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "146:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "136:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "136:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "114:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "187:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "189:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "203:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "211:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "199:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "189:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "167:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "157:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:111:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "305:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "310:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "301:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "301:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:31:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:31:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "342:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "335:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "233:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "264:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "253:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "253:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "49:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "58:6:67",
                "type": ""
              }
            ],
            "src": "14:380:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6428:67",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:67",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:67"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:67"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:67",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:67"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:67",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:67",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:67"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:67",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:67"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:67"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:67"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:67",
                "type": ""
              }
            ],
            "src": "14:173:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:67",
                "type": ""
              }
            ],
            "src": "192:196:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:183:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "526:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "535:6:67"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "543:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "528:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "528:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "528:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "501:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "522:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "490:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:39:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "590:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "571:18:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:29:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "609:48:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "642:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "653:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "638:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "638:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "619:18:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:38:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "609:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "438:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "449:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "461:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "469:6:67",
                "type": ""
              }
            ],
            "src": "393:270:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "772:234:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "818:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "827:6:67"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "835:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "820:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "820:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "820:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "793:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "802:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "789:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "789:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "814:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "785:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "785:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "782:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "853:39:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "882:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "863:18:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "863:29:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "853:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "901:48:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "934:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "945:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "930:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "930:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "911:18:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "911:38:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "901:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "958:42:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "985:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "996:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "968:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "968:32:67"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "958:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "722:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "733:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "745:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "753:6:67",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "761:6:67",
                "type": ""
              }
            ],
            "src": "668:338:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1098:177:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1144:26:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1153:6:67"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1161:6:67"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1146:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1146:22:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1146:22:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1119:7:67"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1128:9:67"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1115:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:23:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1140:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1111:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:32:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1108:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1179:39:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1208:9:67"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1189:18:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:29:67"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1227:42:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1254:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1265:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1250:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1250:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1237:12:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1237:32:67"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1227:6:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1056:9:67",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1067:7:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1079:6:67",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1087:6:67",
                "type": ""
              }
            ],
            "src": "1011:264:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1375:92:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1385:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1397:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1408:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1393:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1393:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1385:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1427:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1452:6:67"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1445:6:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1445:14:67"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1438:6:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1438:22:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1420:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1420:41:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1420:41:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1344:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1355:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1366:4:67",
                "type": ""
              }
            ],
            "src": "1280:187:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1593:482:67",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1603:12:67",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1613:2:67",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1607:2:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1631:9:67"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1642:2:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1624:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1624:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1624:21:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1654:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1674:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1668:5:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1668:13:67"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1658:6:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1701:9:67"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1712:2:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1697:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1697:18:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1717:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1690:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1690:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1690:34:67"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1733:13:67",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "1742:4:67"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1737:1:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1805:90:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1834:9:67"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "1845:1:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1830:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1830:17:67"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1849:2:67",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1826:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1826:26:67"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1868:6:67"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1876:1:67"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1864:3:67"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1864:14:67"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1880:2:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1860:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1860:23:67"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1854:5:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1854:30:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1819:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1819:66:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1819:66:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1766:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1769:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1763:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1763:13:67"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1777:19:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1779:15:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1788:1:67"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1791:2:67"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1784:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1784:10:67"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1779:1:67"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1759:3:67",
                    "statements": []
                  },
                  "src": "1755:140:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1929:69:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1958:9:67"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1969:6:67"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1954:3:67"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1954:22:67"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1978:2:67",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1950:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1950:31:67"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1983:4:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1943:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1943:45:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1943:45:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1910:1:67"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1913:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1907:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1907:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "1904:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2007:62:67",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2023:9:67"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2042:6:67"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2050:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2038:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2038:15:67"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2059:2:67",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2055:3:67"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2055:7:67"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2034:3:67"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2034:29:67"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2019:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2019:45:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2066:2:67",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2015:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:54:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2007:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1562:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1573:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1584:4:67",
                "type": ""
              }
            ],
            "src": "1472:603:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2254:225:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2271:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2282:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2264:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2264:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2264:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2305:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2316:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2301:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2301:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2321:2:67",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2294:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2294:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2294:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2344:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2355:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2340:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2340:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2360:34:67",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2333:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2333:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2333:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2415:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2426:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2411:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2411:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2431:5:67",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2404:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2404:33:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2404:33:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2446:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2458:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2469:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2454:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2454:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2446:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2231:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2245:4:67",
                "type": ""
              }
            ],
            "src": "2080:399:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2658:224:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2675:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2686:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2668:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2668:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2668:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2709:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2720:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2705:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2705:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2725:2:67",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2698:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2698:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2698:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2748:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2759:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2744:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2744:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2764:34:67",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2737:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2737:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2737:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2819:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2830:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2815:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2815:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2835:4:67",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2808:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2808:32:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2808:32:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2849:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2861:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2872:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2857:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2857:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2849:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2635:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2649:4:67",
                "type": ""
              }
            ],
            "src": "2484:398:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3061:228:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3078:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3089:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3071:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3071:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3071:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3112:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3123:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3108:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3108:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3128:2:67",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3101:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3101:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3101:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3151:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3162:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3147:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3147:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3167:34:67",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3140:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3140:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3140:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3222:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3233:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3218:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3218:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3238:8:67",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3211:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3211:36:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3211:36:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3256:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3268:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3279:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3264:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3256:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3038:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3052:4:67",
                "type": ""
              }
            ],
            "src": "2887:402:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3468:230:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3485:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3496:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3478:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3478:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3478:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3519:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3530:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3515:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3515:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3535:2:67",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3508:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3508:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3508:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3558:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3569:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3554:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3554:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3574:34:67",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3547:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3547:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3547:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3629:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3640:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3625:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3625:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3645:10:67",
                        "type": "",
                        "value": "llowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3618:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3618:38:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3618:38:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3665:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3677:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3688:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3673:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3673:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3665:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3445:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3459:4:67",
                "type": ""
              }
            ],
            "src": "3294:404:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3877:227:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3894:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3905:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3887:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3887:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3928:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3939:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3924:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3944:2:67",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3917:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3917:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3917:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3967:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3978:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3963:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3963:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3983:34:67",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3956:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3956:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3956:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4038:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4049:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4034:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4034:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4054:7:67",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4027:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4027:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4027:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4071:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4083:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4094:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4079:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4079:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4071:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3854:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3868:4:67",
                "type": ""
              }
            ],
            "src": "3703:401:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4283:226:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4300:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4311:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4293:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4293:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4293:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4334:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4345:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4330:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4330:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4350:2:67",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4323:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4323:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4323:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4373:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4384:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4369:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4369:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4389:34:67",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4362:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4362:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4362:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4444:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4455:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4440:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4440:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4460:6:67",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4433:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4433:34:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4433:34:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4476:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4488:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4499:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4484:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4476:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4260:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4274:4:67",
                "type": ""
              }
            ],
            "src": "4109:400:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4688:227:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4705:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4716:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4698:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4698:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4739:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4750:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4735:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4735:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4755:2:67",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4728:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4728:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4728:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4778:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4789:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4774:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4774:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4794:34:67",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4767:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4767:62:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4767:62:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4849:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4860:2:67",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4845:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4845:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4865:7:67",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4838:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4838:35:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4838:35:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4882:27:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4894:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4905:3:67",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4890:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4890:19:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4882:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4665:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4679:4:67",
                "type": ""
              }
            ],
            "src": "4514:401:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5094:181:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5111:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5122:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5104:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5104:21:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5104:21:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5145:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5156:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5141:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5141:18:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5161:2:67",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5134:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5134:30:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5134:30:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5184:9:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5195:2:67",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5180:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5180:18:67"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5200:33:67",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5173:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5173:61:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5173:61:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5243:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5255:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5266:2:67",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5251:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5251:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5243:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5071:9:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5085:4:67",
                "type": ""
              }
            ],
            "src": "4920:355:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5381:76:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5391:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5403:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5414:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5399:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5399:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5391:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5433:9:67"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5444:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5426:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5426:25:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5426:25:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5350:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5361:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5372:4:67",
                "type": ""
              }
            ],
            "src": "5280:177:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5559:87:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5569:26:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5581:9:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5592:2:67",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5577:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5577:18:67"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5569:4:67"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5611:9:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5626:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5634:4:67",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5622:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5622:17:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5604:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5604:36:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5604:36:67"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5528:9:67",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5539:6:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5550:4:67",
                "type": ""
              }
            ],
            "src": "5462:184:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5699:80:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5726:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5728:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5728:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5728:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5715:1:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5722:1:67"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5718:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5718:6:67"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5712:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5712:13:67"
                  },
                  "nodeType": "YulIf",
                  "src": "5709:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5757:16:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5768:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5771:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5764:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5764:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5757:3:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5682:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5685:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5691:3:67",
                "type": ""
              }
            ],
            "src": "5651:128:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5833:76:67",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5855:22:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5857:16:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5857:18:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5857:18:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5849:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5852:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5846:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5846:8:67"
                  },
                  "nodeType": "YulIf",
                  "src": "5843:2:67"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5886:17:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5898:1:67"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5901:1:67"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "5894:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5894:9:67"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "5886:4:67"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5815:1:67",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5818:1:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "5824:4:67",
                "type": ""
              }
            ],
            "src": "5784:125:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5969:325:67",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5979:22:67",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5993:1:67",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "5996:4:67"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "5989:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5989:12:67"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5979:6:67"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6010:38:67",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "6040:4:67"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6046:1:67",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6036:3:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6036:12:67"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "6014:18:67",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6087:31:67",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6089:27:67",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "6103:6:67"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6111:4:67",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "6099:3:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6099:17:67"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6089:6:67"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6067:18:67"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6060:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6060:26:67"
                  },
                  "nodeType": "YulIf",
                  "src": "6057:2:67"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6177:111:67",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6198:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6205:3:67",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6210:10:67",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6201:3:67"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6201:20:67"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6191:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6191:31:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6191:31:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6242:1:67",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6245:4:67",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6235:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6235:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6235:15:67"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6270:1:67",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6273:4:67",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6263:6:67"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6263:15:67"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6263:15:67"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "6133:18:67"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6156:6:67"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6164:2:67",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6153:2:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6153:14:67"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "6130:2:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6130:38:67"
                  },
                  "nodeType": "YulIf",
                  "src": "6127:2:67"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "5949:4:67",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5958:6:67",
                "type": ""
              }
            ],
            "src": "5914:380:67"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6331:95:67",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6348:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6355:3:67",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6360:10:67",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6351:3:67"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6351:20:67"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6341:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6341:31:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6341:31:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6388:1:67",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6391:4:67",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6381:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6381:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6381:15:67"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6412:1:67",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6415:4:67",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6405:6:67"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6405:15:67"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6405:15:67"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "6299:127:67"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 67,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "123:237:64:-:0;;;189:29;;;;;;;;;;1898:114:30;;;;;;;;;;;;;-1:-1:-1;;;1898:114:30;;;;;;;;;;;;;;;;-1:-1:-1;;;1898:114:30;;;1973:5;1965;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1988:17:30;;;;:7;;:17;;;;;:::i;:::-;;1898:114;;123:237:64;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;123:237:64;;;-1:-1:-1;123:237:64;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:67;93:1;89:12;;;;136;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;123:237:64;;;;;;",
  "deployedSourceMap": "123:237:64:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4174:166;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:67;;1438:22;1420:41;;1408:2;1393:18;4174:166:30;1375:92:67;3165:106:30;3252:12;;3165:106;;;5426:25:67;;;5414:2;5399:18;3165:106:30;5381:76:67;4807:414:30;;;;;;:::i;:::-;;:::i;3014:91::-;;;3096:2;5604:36:67;;5592:2;5577:18;3014:91:30;5559:87:67;5616:212:30;;;;;;:::i;:::-;;:::i;240:117:64:-;;;;;;:::i;:::-;;:::i;3329:125:30:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3429:18:30;3403:7;3429:18;;;;;;;;;;;;3329:125;2288:102;;;:::i;6315:371::-;;;;;;:::i;:::-;;:::i;3657:172::-;;;;;;:::i;:::-;;:::i;3887:149::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4002:18:30;;;3976:7;4002:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3887:149;2077:98;2131:13;2163:5;2156:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2077:98;:::o;4174:166::-;4257:4;4273:39;665:10:40;4296:7:30;4305:6;4273:8;:39::i;:::-;-1:-1:-1;4329:4:30;4174:166;;;;:::o;4807:414::-;4913:4;4929:36;4939:6;4947:9;4958:6;4929:9;:36::i;:::-;-1:-1:-1;;;;;5003:19:30;;4976:24;5003:19;;;:11;:19;;;;;;;;665:10:40;5003:33:30;;;;;;;;5054:26;;;;5046:79;;;;-1:-1:-1;;;5046:79:30;;3496:2:67;5046:79:30;;;3478:21:67;3535:2;3515:18;;;3508:30;3574:34;3554:18;;;3547:62;-1:-1:-1;;;3625:18:67;;;3618:38;3673:19;;5046:79:30;;;;;;;;;5135:57;5144:6;665:10:40;5166:25:30;5185:6;5166:16;:25;:::i;:::-;5135:8;:57::i;:::-;-1:-1:-1;5210:4:30;;4807:414;-1:-1:-1;;;;4807:414:30:o;5616:212::-;665:10:40;5704:4:30;5752:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5752:34:30;;;;;;;;;;5704:4;;5720:80;;5743:7;;5752:47;;5789:10;;5752:47;:::i;240:117:64:-;297:4;313:16;319:2;323:5;313;:16::i;2288:102:30:-;2344:13;2376:7;2369:14;;;;;:::i;6315:371::-;665:10:40;6408:4:30;6451:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6451:34:30;;;;;;;;;;6503:35;;;;6495:85;;;;-1:-1:-1;;;6495:85:30;;4716:2:67;6495:85:30;;;4698:21:67;4755:2;4735:18;;;4728:30;4794:34;4774:18;;;4767:62;-1:-1:-1;;;4845:18:67;;;4838:35;4890:19;;6495:85:30;4688:227:67;6495:85:30;6590:67;665:10:40;6613:7:30;6622:34;6641:15;6622:16;:34;:::i;6590:67::-;-1:-1:-1;6675:4:30;;6315:371;-1:-1:-1;;;6315:371:30:o;3657:172::-;3743:4;3759:42;665:10:40;3783:9:30;3794:6;3759:9;:42::i;9579:340::-;-1:-1:-1;;;;;9680:19:30;;9672:68;;;;-1:-1:-1;;;9672:68:30;;4311:2:67;9672:68:30;;;4293:21:67;4350:2;4330:18;;;4323:30;4389:34;4369:18;;;4362:62;-1:-1:-1;;;4440:18:67;;;4433:34;4484:19;;9672:68:30;4283:226:67;9672:68:30;-1:-1:-1;;;;;9758:21:30;;9750:68;;;;-1:-1:-1;;;9750:68:30;;2686:2:67;9750:68:30;;;2668:21:67;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:67;;;2808:32;2857:19;;9750:68:30;2658:224:67;9750:68:30;-1:-1:-1;;;;;9829:18:30;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9880:32;;5426:25:67;;;9880:32:30;;5399:18:67;9880:32:30;;;;;;;9579:340;;;:::o;7160:592::-;-1:-1:-1;;;;;7265:20:30;;7257:70;;;;-1:-1:-1;;;7257:70:30;;3905:2:67;7257:70:30;;;3887:21:67;3944:2;3924:18;;;3917:30;3983:34;3963:18;;;3956:62;-1:-1:-1;;;4034:18:67;;;4027:35;4079:19;;7257:70:30;3877:227:67;7257:70:30;-1:-1:-1;;;;;7345:23:30;;7337:71;;;;-1:-1:-1;;;7337:71:30;;2282:2:67;7337:71:30;;;2264:21:67;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:67;;;2404:33;2454:19;;7337:71:30;2254:225:67;7337:71:30;-1:-1:-1;;;;;7501:17:30;;7477:21;7501:17;;;;;;;;;;;7536:23;;;;7528:74;;;;-1:-1:-1;;;7528:74:30;;3089:2:67;7528:74:30;;;3071:21:67;3128:2;3108:18;;;3101:30;3167:34;3147:18;;;3140:62;-1:-1:-1;;;3218:18:67;;;3211:36;3264:19;;7528:74:30;3061:228:67;7528:74:30;7632:22;7648:6;7632:13;:22;:::i;:::-;-1:-1:-1;;;;;7612:17:30;;;:9;:17;;;;;;;;;;;:42;;;;7664:20;;;;;;;;:30;;7688:6;;7612:9;7664:30;;7688:6;;7664:30;:::i;:::-;;;;;;;;7727:9;-1:-1:-1;;;;;7710:35:30;7719:6;-1:-1:-1;;;;;7710:35:30;;7738:6;7710:35;;;;5426:25:67;;5414:2;5399:18;;5381:76;7710:35:30;;;;;;;;7160:592;;;;:::o;8023:330::-;-1:-1:-1;;;;;8106:21:30;;8098:65;;;;-1:-1:-1;;;8098:65:30;;5122:2:67;8098:65:30;;;5104:21:67;5161:2;5141:18;;;5134:30;5200:33;5180:18;;;5173:61;5251:18;;8098:65:30;5094:181:67;8098:65:30;8250:6;8234:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8266:18:30;;:9;:18;;;;;;;;;;:28;;8288:6;;8266:9;:28;;8288:6;;8266:28;:::i;:::-;;;;-1:-1:-1;;8309:37:30;;5426:25:67;;;-1:-1:-1;;;;;8309:37:30;;;8326:1;;8309:37;;5414:2:67;5399:18;8309:37:30;;;;;;;8023:330;;:::o;14:173:67:-;82:20;;-1:-1:-1;;;;;131:31:67;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:67:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:67:o;1472:603::-;1584:4;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:67;2038:15;-1:-1:-1;;2034:29:67;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:67:o;5651:128::-;5691:3;5722:1;5718:6;5715:1;5712:13;5709:2;;;5728:18;;:::i;:::-;-1:-1:-1;5764:9:67;;5699:80::o;5784:125::-;5824:4;5852:1;5849;5846:8;5843:2;;;5857:18;;:::i;:::-;-1:-1:-1;5894:9:67;;5833:76::o;5914:380::-;5993:1;5989:12;;;;6036;;;6057:2;;6111:4;6103:6;6099:17;6089:27;;6057:2;6164;6156:6;6153:14;6133:18;6130:38;6127:2;;;6210:10;6205:3;6201:20;6198:1;6191:31;6245:4;6242:1;6235:15;6273:4;6270:1;6263:15;6127:2;;5969:325;;;:::o;6299:127::-;6360:10;6355:3;6351:20;6348:1;6341:31;6391:4;6388:1;6381:15;6415:4;6412:1;6405:15",
  "source": "// SPDX-License-Identifier: MIT\n/*\n\n  << TestERC20 >>\n\n*/\n\npragma solidity 0.8.4;\n\nimport \"../lib/token/ERC20/ERC20.sol\";\n\ncontract TestERC20 is ERC20(\"test\", \"TST\") {\n\n    /**\n     */\n    constructor () public {\n    }\n\n    /**\n     */\n    function mint(address to, uint256 value) public returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n\n}\n",
  "sourcePath": "/home/toor/nodejs/truffle/nft_demo/taureum/taureum-nft-protocol-sc/contracts/test/TestERC20.sol",
  "ast": {
    "absolutePath": "project:/contracts/test/TestERC20.sol",
    "exportedSymbols": {
      "Context": [
        9610
      ],
      "ERC20": [
        8004
      ],
      "IERC20": [
        8082
      ],
      "IERC20Metadata": [
        8107
      ],
      "TestERC20": [
        13613
      ]
    },
    "id": 13614,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13586,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:22:64"
      },
      {
        "absolutePath": "project:/contracts/lib/token/ERC20/ERC20.sol",
        "file": "../lib/token/ERC20/ERC20.sol",
        "id": 13587,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13614,
        "sourceUnit": 8005,
        "src": "83:38:64",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "74657374",
                "id": 13589,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "151:6:64",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                  "typeString": "literal_string \"test\""
                },
                "value": "test"
              },
              {
                "hexValue": "545354",
                "id": 13590,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "159:5:64",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                  "typeString": "literal_string \"TST\""
                },
                "value": "TST"
              }
            ],
            "baseName": {
              "id": 13588,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8004,
              "src": "145:5:64"
            },
            "id": 13591,
            "nodeType": "InheritanceSpecifier",
            "src": "145:20:64"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13613,
        "linearizedBaseContracts": [
          13613,
          8004,
          8107,
          8082,
          9610
        ],
        "name": "TestERC20",
        "nameLocation": "132:9:64",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13594,
              "nodeType": "Block",
              "src": "211:7:64",
              "statements": []
            },
            "id": 13595,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:64"
            },
            "returnParameters": {
              "id": 13593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:64"
            },
            "scope": 13613,
            "src": "189:29:64",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13611,
              "nodeType": "Block",
              "src": "303:54:64",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13605,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13597,
                        "src": "319:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13606,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13599,
                        "src": "323:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13604,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7885,
                      "src": "313:5:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "313:16:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13608,
                  "nodeType": "ExpressionStatement",
                  "src": "313:16:64"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "346:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13603,
                  "id": 13610,
                  "nodeType": "Return",
                  "src": "339:11:64"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 13612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "249:4:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13597,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "262:2:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 13612,
                  "src": "254:10:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13599,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "274:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 13612,
                  "src": "266:13:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "253:27:64"
            },
            "returnParameters": {
              "id": 13603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13612,
                  "src": "297:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13601,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:6:64"
            },
            "scope": 13613,
            "src": "240:117:64",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13614,
        "src": "123:237:64",
        "usedErrors": []
      }
    ],
    "src": "59:302:64"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/test/TestERC20.sol",
    "exportedSymbols": {
      "Context": [
        9610
      ],
      "ERC20": [
        8004
      ],
      "IERC20": [
        8082
      ],
      "IERC20Metadata": [
        8107
      ],
      "TestERC20": [
        13613
      ]
    },
    "id": 13614,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13586,
        "literals": [
          "solidity",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "59:22:64"
      },
      {
        "absolutePath": "project:/contracts/lib/token/ERC20/ERC20.sol",
        "file": "../lib/token/ERC20/ERC20.sol",
        "id": 13587,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 13614,
        "sourceUnit": 8005,
        "src": "83:38:64",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "74657374",
                "id": 13589,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "151:6:64",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                  "typeString": "literal_string \"test\""
                },
                "value": "test"
              },
              {
                "hexValue": "545354",
                "id": 13590,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "159:5:64",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                  "typeString": "literal_string \"TST\""
                },
                "value": "TST"
              }
            ],
            "baseName": {
              "id": 13588,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8004,
              "src": "145:5:64"
            },
            "id": 13591,
            "nodeType": "InheritanceSpecifier",
            "src": "145:20:64"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 13613,
        "linearizedBaseContracts": [
          13613,
          8004,
          8107,
          8082,
          9610
        ],
        "name": "TestERC20",
        "nameLocation": "132:9:64",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13594,
              "nodeType": "Block",
              "src": "211:7:64",
              "statements": []
            },
            "id": 13595,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "201:2:64"
            },
            "returnParameters": {
              "id": 13593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "211:0:64"
            },
            "scope": 13613,
            "src": "189:29:64",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13611,
              "nodeType": "Block",
              "src": "303:54:64",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13605,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13597,
                        "src": "319:2:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 13606,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13599,
                        "src": "323:5:64",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 13604,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7885,
                      "src": "313:5:64",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 13607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "313:16:64",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13608,
                  "nodeType": "ExpressionStatement",
                  "src": "313:16:64"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 13609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "346:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 13603,
                  "id": 13610,
                  "nodeType": "Return",
                  "src": "339:11:64"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 13612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "249:4:64",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13597,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "262:2:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 13612,
                  "src": "254:10:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "254:7:64",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13599,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "274:5:64",
                  "nodeType": "VariableDeclaration",
                  "scope": 13612,
                  "src": "266:13:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13598,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "266:7:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "253:27:64"
            },
            "returnParameters": {
              "id": 13603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13602,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 13612,
                  "src": "297:4:64",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13601,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:4:64",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:6:64"
            },
            "scope": 13613,
            "src": "240:117:64",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13614,
        "src": "123:237:64",
        "usedErrors": []
      }
    ],
    "src": "59:302:64"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-09-02T04:22:11.830Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}